name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    env:
      COSMOSDB_CONNECTION_STRING: ${{ secrets.COSMOSDB_CONNECTION_STRING }}
      COSMOSDB_DATABASE_NAME: ${{ secrets.COSMOSDB_DATABASE_NAME }}
      COSMOSDB_CONTAINER_NAME: ${{ secrets.COSMOSDB_CONTAINER_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Check architecture
        run: uname -m

      - name: Set up Docker on macOS
        if: runner.os == 'macOS'
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
          sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
          open -a /Applications/Docker.app --args --unattended --accept-license
          echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
          while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; echo "Waiting for Docker to start"; do sleep 5; done

      - name: Verify Docker installation
        run: docker --version

      - name: Start CosmosDB service
        run: |
          docker run -d \
            -p 8081:8081 \
            --name cosmosdb \
            mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:vnext-preview

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Stop CosmosDB service
        run: docker stop cosmosdb && docker rm cosmosdb
